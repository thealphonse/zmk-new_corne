#include <dt-bindings/zmk/mouse.h>
#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/*

   &mmv_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

   &msc_input_listener {
       input-processors = <&zip_xy_scaler 2 1>;
   };

 */

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T                              &kp UP                &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G                    &kp LEFT  &kp ENTER  &kp RIGHT  &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B      &kp C_MUTE              &kp DOWN              &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                              &kp LEFT_ALT  &mo 1  &kp SPACE                                                &kp ENTER  &mo 2  &kp LEFT_WIN
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE    &kp F1  &kp F2   &kp F3   &kp F4   &trans                                &kp PAGE_UP             &kp N7        &kp N8        &kp N9        &none   &none   &trans
&kt CAPSLOCK  &kp F5  &kp F6   &kp F7   &kp F8   &trans                      &kp HOME  &trans         &kp END  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &none   &trans  &trans
&trans        &kp F9  &kp F10  &kp F11  &kp F12  &trans  &kp K_PLAY_PAUSE              &kp PAGE_DOWN           &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans  &trans
                               &trans   &trans   &trans                                                        &kp KP_ENTER  &kp N0        &kp N0
            >;

            sensor-bindings = <&inc_dec_kp K_NEXT K_PREVIOUS>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&trans  &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT                                         &rgb_ug RGB_HUI                   &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp DELETE
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                     &rgb_ug RGB_EFR  &bt BT_CLR_ALL   &rgb_ug RGB_EFF  &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&none   &none         &none         &none         &none         &none         &rgb_ug RGB_TOG                     &rgb_ug RGB_HUD                   &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                    &trans        &trans        &kp SPACE                                                                           &kp RET    &trans     &trans
            >;

            sensor-bindings = <&rgb_encoder>;
        };
    };
};
